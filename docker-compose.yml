services:
  app:
    build:
      context: .
      dockerfile: Docker/Flask/Dockerfile
    container_name: app
    ports:
      - '5000:5000'
    depends_on:
      - db
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - TZ=Asia/Tokyo
    volumes:
      - ./src:/app
      - ./Docker/Flask/requirements.txt:/app/requirements.txt

  db:
    build:
      context: .
      dockerfile: Docker/MySQL/Dockerfile
    container_name: db
    restart: 'no'
    ports:
      - '3306:3306'
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=SUN_Chaser
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=chaser
      - TZ=Asia/Tokyo
    volumes:
      - mysql-data:/var/lib/mysql
      - ./Docker/MySQL/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data/weatherdata_1.csv:/docker-entrypoint-initdb.d/weatherdata_1.csv
      - ./Docker/MySQL/my.cnf:/etc/mysql/conf.d/my.cnf

  web:
    image: nginx:alpine
    container_name: web
    ports:
      - '80:80'
    volumes:
      - ./Docker/NginX/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    environment:
      - TZ=Asia/Tokyo

volumes:
  mysql-data:
